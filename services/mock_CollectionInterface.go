// Code generated by mockery v1.0.0. DO NOT EDIT.

package services

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
	options "go.mongodb.org/mongo-driver/mongo/options"
)

// MockCollectionInterface is an autogenerated mock type for the CollectionInterface type
type MockCollectionInterface struct {
	mock.Mock
}

// Find provides a mock function with given fields: ctx, filter, opt
func (_m *MockCollectionInterface) Find(ctx context.Context, filter interface{}, opt *options.FindOptions) CursorInterface {
	ret := _m.Called(ctx, filter, opt)

	var r0 CursorInterface
	if rf, ok := ret.Get(0).(func(context.Context, interface{}, *options.FindOptions) CursorInterface); ok {
		r0 = rf(ctx, filter, opt)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(CursorInterface)
		}
	}

	return r0
}

// InsertOne provides a mock function with given fields: ctx, document
func (_m *MockCollectionInterface) InsertOne(ctx context.Context, document interface{}) (interface{}, error) {
	ret := _m.Called(ctx, document)

	var r0 interface{}
	if rf, ok := ret.Get(0).(func(context.Context, interface{}) interface{}); ok {
		r0 = rf(ctx, document)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(interface{})
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, interface{}) error); ok {
		r1 = rf(ctx, document)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
